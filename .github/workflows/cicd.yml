name: Node.js CI/CD with Blue/Green Deployment

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: blue-green-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container & push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Create .env file
      run: |
        echo "export ECR_REPO_URL=${{ steps.login-ecr.outputs.registry }}/blue-green-app" > app/.env

    - name: Zip application
      run: |
        zip -r ../app.zip .
      working-directory: app

    - name: Upload to S3
      run: |
        aws s3 cp app.zip s3://${{ secrets.S3_BUCKET_NAME }}/app.zip

    - name: Create CodeDeploy Deployment
      env:
        ECR_REPO_URL: ${{ steps.login-ecr.outputs.registry }}/blue-green-app
      run: |
        aws deploy create-deployment \
          --application-name asg-rollout-app \
          --deployment-group-name asg-rollout-deployment-group \
          --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},key=app.zip,bundleType=zip
